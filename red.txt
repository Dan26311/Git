second_win
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (QApplication, QWidget,
        QHBoxLayout, QVBoxLayout,
        QGroupBox, QRadioButton,
        QPushButton, QLabel, QListWidget, QLineEdit)


from instr import *
from final_win import *

class TestWin(QWidget):
    def __init__(self):
        super().__init__()

        self.initUI()

        self.connects()

        self.set_appear()

        self.show()
    def next_click(self):
        self.tw = TestWin()
        self.hide()

    def connects(self):
        self.btn_next.clicked.connect(self.next_click)

    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resaize(win_width, win_height)
        self.move(win_x, win_y)


    def initUT(self):
        ''' создаёт графические элементы'''
        self.btn_next = QPushButton(txt_sendresults, self)
        self.btn_text1 = QPushButton(txt_starttest1, self)
        self.btn_text2 = QPushButton(txt_starttest2, self)
        self.btn_text3 = QPushButton(txt_starttest3, self)



        self.text_name = QLabel(txt_name)
        self.text_age = QLabel(txt_age)
        self.text_test1 = QLabel(txt_test1)
        self.text_test2 = QLabel(txt_test2)
        self.text_test3 = QLabel(txt_test3)
        self.text_timer = QLabel(text_timer)


        self.line_name = QLineEdit(txt_hintname)


        self.line_age = QlineEdit(txt_hintname)


        self.line_test1 = QLineEdit(txt_hintname1)


        self.line_test2 = QLineEdit(txt_hintname2)


        self.line_test3 = QLineEdit(txt_hintname3)


        self.l.line = QVBoxLayout()
        self.r.line = QVBoxLayout()
        self.h.line = QVBoxLayout()
        self.r.line.addWidget(self.text_timer, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.text_name, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.line_name, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.text_age, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.line_age, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.text_test1, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.btn_test1, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.line_test1, alignment = Qt.AlignCenter)
        self.l.line.addWidget(self.text_test2, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.btn_test2, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.text_test3, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.btn_test3, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.line_test2, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.line_test3, alignment = QT.AlignCenter)
        self.l.line.addWidget(self.btn_next, alignment = QT.AlignCenter)
        self.h.line.addLayout(self.l_line)
        self.h.line.addLayout(self.r_line)
        self.setLayout(self.h_line)


    def next_clic(self):
        self.hide()
        self.fw = FinalWin()


    def connects(self):
        self.btn_next.cliked.connect(self.next_click)


    ''' устанавливаетб как будет выглядеть окно(надписьб размерб место)'''
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_width, win_height)
        self.move(win_x, win_y)